"use strict";(self.webpackChunkjb_blog=self.webpackChunkjb_blog||[]).push([[1182],{619:e=>{e.exports=JSON.parse('{"permalink":"/blog/pixels","source":"@site/blog/2021-11-07-pixels.md","title":"A pixel is not a \u25fb","description":"This memo could be an information dump in a Christopher Nolan movie. Zero shame.","date":"2021-11-07T00:00:00.000Z","tags":[{"inline":true,"label":"science popularization","permalink":"/blog/tags/science-popularization"}],"readingTime":10.07,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"pixels","title":"A pixel is not a \u25fb","draft":false,"tags":["science popularization"]},"unlisted":false,"prevItem":{"title":"The visual design of Demon Slayer\'s combats","permalink":"/blog/demon-slayer-visual-grammar"},"nextItem":{"title":"The almost unintentional dolly of Insomniac\'s Spidercam","permalink":"/blog/spiderman-dolly"}}')},2446:(e,t,i)=>{i.d(t,{A:()=>s});i(6540);var n=i(4848);const s=function({srcUrl:e,width:t=560,height:i=315,legend:s=""}){return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{style:{display:"flex",justifyContent:"center",margin:"auto",marginBottom:"30px"},children:(0,n.jsx)("iframe",{className:"illustration",width:t,height:i,src:e,frameBorder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})}),(0,n.jsx)("p",{style:{fontSize:"small",textAlign:"center",marginTop:"-20px"},children:s})]})}},2929:(e,t,i)=>{i.d(t,{A:()=>o});i(6540);var n=i(6025),s=i(4848);const o=function({srcImage:e,legend:t="",altText:i="",halfWidth:o=!1}){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{style:{width:"fit-content",display:"flex",margin:"auto",marginBottom:"30px"},children:(0,s.jsx)("img",{alt:i,style:{width:o?"400px":"auto",margin:"auto"},src:(0,n.Ay)(e)})}),(0,s.jsx)("p",{style:{fontSize:"small",textAlign:"center",marginTop:"-20px"},children:t})]})}},5368:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>c});var n=i(619),s=i(4848),o=i(8453),a=i(2929);i(2446),i(9940);const r={slug:"pixels",title:"A pixel is not a \u25fb",draft:!1,tags:["science popularization"]},l=void 0,h={authorsImageUrls:[]},c=[{value:"The Little Square Model",id:"the-little-square-model",level:2},{value:"So, What Is a Pixel?",id:"so-what-is-a-pixel",level:2},{value:"Why Is the Little square Model So Persistent?",id:"why-is-the-little-square-model-so-persistent",level:2},{value:"Summary",id:"summary",level:2},{value:"Conclusion: A Voxel is <em>not</em> a little cube!",id:"conclusion-a-voxel-is-not-a-little-cube",level:2}];function d(e){const t={a:"a",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This memo could be an information dump in a Christopher Nolan movie. Zero shame."}),"\n","\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/cube_companion.png",altText:"cube-companion"}),"\n",(0,s.jsxs)("p",{style:{textAlign:"center",fontWeight:"bold",marginTop:"20px",fontSize:"24px"},children:[(0,s.jsxs)(t.p,{children:["\xab A pixel is not a little square,\n",(0,s.jsx)("br",{}),"a pixel is not a little square,\n",(0,s.jsx)("br",{}),"a pixel is not a little square!"]}),(0,s.jsx)("br",{}),(0,s.jsx)(t.p,{children:"(And a voxel is not a little cube) \xbb"})]}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(t.p,{children:["This text is a synthesis, with some heavy modifications to make it simpler\nfor non-technical people, of a\n",(0,s.jsx)(t.a,{href:"http://alvyray.com/Memos/CG/Microsoft/6_pixel.pdf",children:"famous eponym technical memo"}),"\nwritten by Alvy Ray Smith in 1995 during his time at Microsoft. Alvy Ray\nSmith is one of the co-founders of Pixar and a genius. I tried to keep the\noriginal text where I could! Although it still lacks illustrations\naccording to me."]}),"\n",(0,s.jsx)(t.p,{children:"In a time where voxel (or the idea that some have of voxel I should say)\nseems to be the next big thing for g@m3rz, I find interesting to dig out\nthis vision again. I wrote this during my internship time at Ubisoft, where voxels were seen as the next big thing in gaming by HQ."}),"\n",(0,s.jsx)("hr",{}),"\n",(0,s.jsx)(t.p,{children:"My purpose here is to, once and for all, rid the world of the\nmisconception that a pixel is a little geometric square. This is not a\nreligious issue. This is an issue that strikes right at the root of\ncorrect image computing. The little square model is simply incorrect. It\nharms. It gets in the way. If you find yourself thinking that a pixel is a\nlittle square, please read this paper."}),"\n",(0,s.jsx)(t.p,{children:"I will have succeeded if you at least understand that you are using the\nmodel and why it is permissible in your case to do so (is it?)."}),"\n",(0,s.jsx)(t.p,{children:"Everything I say about little squares and pixels in the 2D case applies\nequally well to little cubes and voxels in 3D. The generalization is\nstraightforward, so I won\u2019t mention it from hereon."}),"\n",(0,s.jsx)(t.h2,{id:"the-little-square-model",children:"The Little Square Model"}),"\n",(0,s.jsx)(t.p,{children:"The little square model pretends to represent a pixel (picture element) as\na geometric square. Thus pixel (i, j) is assumed to correspond to the area\nof the plane bounded by the square {(x, y) | i-.5 E x E i+.5, j-.5 E y E j+.5}."}),"\n",(0,s.jsx)(t.p,{children:"I have already, with this simple definition, entered the territory of\ncontroversy\u2014a misguided (or at least irrelevant) controversy as I will\nattempt to show. There is typically an argument about whether the pixel\n\u201ccenter\u201d lies on the integers or the half-integers. The \u201chalf-integerists\u201d\nwould have pixel (i, j) correspond instead to the area of the plane {(x,\ny) | i \xa3 x \xa3 i+1., j \xa3 y \xa3 j+1.}."}),"\n",(0,s.jsx)(t.p,{children:"See the little squares? Pixels would have edges and centers by this\nformulation."}),"\n",(0,s.jsx)(t.h2,{id:"so-what-is-a-pixel",children:"So, What Is a Pixel?"}),"\n",(0,s.jsx)(t.p,{children:"A pixel is a point sample. It exists only at a point. For a color picture,\na pixel might actually contain three samples, one for each primary color\ncontributing to the picture at the sampling point. We can still think of\nthis as a point sample of a color. But we cannot think of a pixel as a\nsquare\u2014or anything other than a point."}),"\n",(0,s.jsx)(t.p,{children:"There is a famous theorem called the Sampling Theorem, which tells us that\nwe can reconstruct a continuous entity from a discrete entity using an\nappropriate reconstruction filter. That allows us to represent an image as\na rectilinear array of point samples (pixels!)."}),"\n",(0,s.jsx)(t.p,{children:"There are many types of reconstruction filter out there, and the point of\nthis memo is not to detail all of them, or to explain the maths behind\nthem but to show you the basics."}),"\n",(0,s.jsx)(t.p,{children:"Let\u2019s take a picture:"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (1).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"Our picture has here 5x4 pixels, which contain color information. To fill\nthe blanks, we will use a reconstruction filter, which can be modelled\nwith its footprint:"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (2).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"What this shows is that this filter will consider 5 pixels around a pixel\ncenter to build color inside its footprint (this is a huge simplification\nbut it\u2019s the general idea). So, when you apply a filter to each pixel, you\nget something like this:"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (3).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"So, the final image will \u201clook\u201d like this:"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (4).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"If we change our reconstruction filter, for a \u201cbigger\u201d one, one that will\nconsider more pixel information to build its color, such as this one:"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (5).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"Then the final image will \u201clook\u201d like this:"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (6).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsxs)(t.p,{children:["You normally ",(0,s.jsx)(t.em,{children:"feel"})," that it\u2019s a better reconstruction: there is a\nlot more overlap between each filter footprint, it will be more precise,\njust because knowledge sharing is better (image scientists could murder\nfor that, but it\u2019s the general idea)."]}),"\n",(0,s.jsx)(t.p,{children:"Now let\u2019s look at the worst case: a box filter. Which looks like our\nlittle square model right?"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (7).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"Then our image is reconstructed like this:"}),"\n",(0,s.jsx)(a.A,{srcImage:"img/illustrations/voxel (8).png"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.p,{children:"It is a valid reconstruction, but very poor in quality compared to the\nother filters, resulting in \u201cjaggies\u201d and general \u201caliasing\u201d."}),"\n",(0,s.jsx)(t.h2,{id:"why-is-the-little-square-model-so-persistent",children:"Why Is the Little square Model So Persistent?"}),"\n",(0,s.jsx)(t.p,{children:"I believe there are two principal reasons that the little square model\nhasn\u2019t simply gone away:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Geometry-based computer graphics uses it"}),"\n",(0,s.jsx)(t.li,{children:"Video magnification of computer displays appears to show it"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Geometry-based computer graphics (3D synthesis, CGI, etc.) has solved some\nvery difficult problems over the last four decades by assuming that the\nworld they model could be divided into little squares. Rendering is the\nprocess of converting abstract geometry into viewable pixels that can be\ndisplayed on a computer screen or written to film or video for display."}),"\n",(0,s.jsx)(t.p,{children:"A modern computer graphics model can have millions of polygons\ncontributing to a single image. How are all these millions of geometric\nthings to be resolved into a regular array of pixels for display? Answer:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Simplify the problem by assuming the rectangular viewport on the model\nis divided regularly into little squares, one per final pixel."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Solve the often-intense hidden surface problem presented by this little\nsquare part of the viewport."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Average the results into a color sample."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This is, of course, exactly box filtering. And it works, even though it is\nlow order filtering."}),"\n",(0,s.jsx)(t.p,{children:"We probably wouldn\u2019t be where we are today in computer graphics without\nthis simplifying assumption. But, this is no reason to identify the model\nof geometric contributions to a pixel with the pixel. I often meet\nextremely intelligent and accomplished geometry-based computer graphicists\nwho have leapt to the identification of the little square simplification\nwith the pixel. This is not a plea for them to desist from use of the\nlittle square model. It is a plea for them to be aware of the\nsimplification involved and to understand that the other half of computer\npicturing\u2014the half that uses no geometry at all, the imaging half\u2014tries to\navoid this very simplification for quality reasons."}),"\n",(0,s.jsx)(t.p,{children:"When one \u201cmagnifies\u201d or \u201czooms in on\u201d an image in most popular\napplications, each pixel appears to be a little square. The higher the\nmagnification or the closer in the zoom, the bigger the little squares\nget."}),"\n",(0,s.jsx)(t.p,{children:"Since I am apparently magnifying the pixel, it must be a little square,\nright? No, this is a false perception."}),"\n",(0,s.jsx)(t.p,{children:"What is happening when you zoom in is this: Each point sample is being\nreplicated MxM times, for magnification factor M. When you look at an\nimage consisting of MxM pixels all of the same color, guess what you see:\nA square of that solid color!"}),"\n",(0,s.jsx)(t.p,{children:"It is not an accurate picture of the pixel below. It is a bunch of pixels\napproximating what you would see if a reconstruction with a box filter\nwere performed."}),"\n",(0,s.jsx)(t.p,{children:"To do a true zoom requires a resampling operation and is much slower than\na video card can comfortably support in realtime today. So, the plea here\nis to please disregard the squareness of zoomed in \u201cpixels\u201d. You are\nreally seeing an MxM array of point samples, not a single point sample\nrendered large."}),"\n",(0,s.jsx)(t.p,{children:"But wait a minute: my monitor is made of pixels, right?"}),"\n",(0,s.jsx)(t.p,{children:"Well. Many people are aware that a color monitor often has little triads\nof dots that cause the perception of color at normal viewing distances.\nThere is no fixed mapping between triads and pixels driving them. The\neasiest way to understand this is to consider your own graphics card."}),"\n",(0,s.jsx)(t.p,{children:"Most modern cards support a variety of different color resolutions\u2014eg,\n640x480, 800x600, 1024x768, etc. The number of triads on your display\nscreen do not change as you change the number of pixels driving them."}),"\n",(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(t.p,{children:"I have presented a brief but inclusive analysis of sampling and filtering.\nIt has been shown that the little square model does not arise naturally in\nsampling theory, the main underpinning of everything we do. The geometry\nworld uses it a great deal because they have had to simplify in order to\naccomplish. Their simplified model of contributions to a pixel should not\nbe confused with or identified with the pixel. Magnified screen pixels\nthat look like little squares have been shown to be a quick and dirty\ntrick (pixel replication) by graphics boards designers, but not the truth."}),"\n",(0,s.jsx)(t.p,{children:"In short, the little square model should be suspect whenever it is\nencountered. It should be used with great care, if at all, and certainly\nnot offered to the world as \u201cstandard\u201d in image computing."}),"\n",(0,s.jsxs)(t.h2,{id:"conclusion-a-voxel-is-not-a-little-cube",children:["Conclusion: A Voxel is ",(0,s.jsx)(t.em,{children:"not"})," a little cube!"]}),"\n",(0,s.jsx)(t.p,{children:"This part is me (JB Siraudin) writing."}),"\n",(0,s.jsxs)(t.p,{children:["You may have found the previous part a little obscure. After all,\nsimplifying a pixel to a little square didn\u2019t hurt ",(0,s.jsx)(t.em,{children:"that"})," much the\ncomputer graphics industry or the video game industry. Many sampling or\nanti-aliasing strategies made up for that."]}),"\n",(0,s.jsx)(t.p,{children:"Now let\u2019s take voxels."}),"\n",(0,s.jsxs)(t.p,{children:["Voxels are not cubes. Voxels are points on 3D grid. It is\n",(0,s.jsx)(t.em,{children:"simple"})," to represent them like cubes but they can be in any shape.\nIf I don\u2019t think the little square model is dangerous anymore, cubic\nvoxels shouldn\u2019t be the norm. Our mental shape of a voxel is determined by\nvoxelart and Minecraft whereas we should turn to fluid simulation as an\nexample of good use of voxels."]}),"\n",(0,s.jsx)(t.p,{children:"If we think of voxels as 3d points for sampling methods, they can be\napplied on top of practically any 3D representation technique, like\npolygon meshes. In fact, it\u2019s already used in advanced lighting\nalgorithms. Just as pixels, one could imagine reconstruction filters for\nremeshing voxellised shapes."}),"\n",(0,s.jsx)(t.p,{children:"The vision of voxels at Ubisoft is to consider them as atoms to run large\nand \u201caccurate\u201d physics simulations to create more believable worlds and\nbetter sandboxes. I\u2019m not saying voxels is a bad idea to accomplish this\nvision. I\u2019m saying we can do it without seeing cubes everywhere. And also,\nnot all physics simulations are made to run with an \u201catomic\u201d model."}),"\n",(0,s.jsx)(t.p,{children:"One must think of voxels as a shape for data storage and data\nmanipulation, not as a 3D shape. And this is all what matters for future\nworld building and simulation: data transformation. Voxels could be a\nstrong basis for this, or not."}),"\n",(0,s.jsxs)(t.p,{children:["The real future of video game for Ubisoft is not ",(0,s.jsx)(t.em,{children:"voxels"})," per se, it\u2019s ",(0,s.jsx)(t.em,{children:"data-oriented design"}),". Where data is the basis of the engine, where multiple simulations can run on the same\nset of data so you don\u2019t need to manually create links between systems. I\nbelieve more in ",(0,s.jsx)(t.em,{children:"this"})," as the key to create complex intricate systems, not\nto modelize everything in the world as little cubes."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>r});var n=i(6540);const s={},o=n.createContext(s);function a(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:t},e.children)}},9940:(e,t,i)=>{i(6540),i(4848)}}]);